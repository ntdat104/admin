{"version":3,"sources":["api/Database.js","api/Authentication.js","components/ClassList.js","components/Teacher.js","components/Student.js","components/ClassInfo.js","components/Course.js","components/Admin.js","components/Login.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDataCourse","Promise","resolve","reject","ref","on","snapshot","Course","forEach","element","push","val","getDataStudent","Student","CREATE_SALT","length","BASE64","salt","i","Math","floor","random","HMAC_SHA256","PASSWORD","SALT","Crypto","HmacSHA256","toString","ClassList","props","state","addStatus","addClass","editStatus","Class","Classes","Courses","classes","elementCourse","courseid","classid","teacherid","coursename","name","sort","a","b","this","setState","getClass","e","target","value","type","checked","toUpperCase","preventDefault","filter","alert","ClassElement","onSubmit","handleAddSubmit","placeholder","onChange","handleAddChange","autoComplete","required","editClass","key","result","toLowerCase","child","set","handleEditSubmit","defaultValue","handleEditChange","disabled","keyClass","ele","remove","map","index","onClick","changeStatus","removeClass","className","checkAddStatus","checkEditStatus","mapClass","renderClassList","Component","Teacher","addTeacher","Teachers","teachers","getData","HASH","hash","editTeacher","username","gender","dateofbirth","phone","parseInt","removeTeacher","renderTeacher","addStudent","Students","studentid","students","editStudent","removeStudent","renderStudent","ClassInfo","ClassMember","ClassMembers","student","count","score","studentname","classMember","mapStudent","renderClassInfo","addCourse","courses","editCourse","removeCourse","mapCourse","renderCourse","Admin","status","option","Login","account","password","checkAccount","handleSubmit","htmlFor","id","handleChange","App","admin","checkLogin","ReactDOM","render","document","getElementById"],"mappings":"8qBAcAA,IAASC,cAXI,CACXC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,8CAOT,IAAMC,EAAWT,IAASS,WA8C1B,SAASC,IACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,UAAUC,GAAG,SAAS,SAACC,GAClC,IAAIC,EAAS,GACbD,EAASE,SAAQ,SAACC,GAChBF,EAAOG,KAAKD,EAAQE,UAEtBT,EAAQK,SAKd,SAASK,IACP,OAAO,IAAIX,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACnC,IAAIO,EAAU,GACdP,EAASE,SAAQ,SAACC,GAChBI,EAAQH,KAAKD,EAAQE,UAEvBT,EAAQW,S,sBChFP,SAASC,EAAYC,GAQxB,IAPA,IAAMC,EAAS,CACX,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7H,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7H,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGvDC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAE7BD,GAAQD,EADaG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOD,SAI3D,OAAOE,EAGJ,SAASK,EAAYC,EAAUC,GAGlC,OADoBC,IAAOC,WAAWH,EAAWC,EAD9B,YACgDG,W,kBCqMxDC,G,yDAhNX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACXC,SAAU,GACVC,YAAY,GALD,E,2LF+Bd,IAAIhC,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,SAASC,GAAG,SAAS,SAACC,GACjC,IAAI4B,EAAQ,GACZ5B,EAASE,SAAQ,SAACC,GAChByB,EAAMxB,KAAKD,EAAQE,UAErBT,EAAQgC,S,cE3BAC,E,gBACgBnC,I,OAAhBoC,E,OACFC,EAAU,GACdF,EAAQ3B,SAAQ,SAACC,GACb2B,EAAQ5B,SAAQ,SAAC8B,GACb,GAAG7B,EAAQ8B,WAAaD,EAAcC,SAAU,CAC5C,IAAML,EAAQ,CACVM,QAAS/B,EAAQ+B,QACjBD,SAAU9B,EAAQ8B,SAClBE,UAAWhC,EAAQgC,UACnBC,WAAYJ,EAAcK,MAE9BN,EAAQ3B,KAAKwB,UAKzBG,EAAUA,EAAQO,MAAK,SAACC,EAAGC,GACvB,OAAGD,EAAEL,QAAUM,EAAEN,QAAgB,EAC9BK,EAAEL,QAAUM,EAAEN,SAAiB,EAC3B,KAGXO,KAAKC,SAAS,CAAEX,QAASA,I,iJAIzBU,KAAKE,a,sCAGOC,GACZ,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,YAATA,GAA+B,aAATA,IACrBS,EAAQA,EAAMG,eAGlBR,KAAKC,SAAS,CACVhB,SAAS,2BAAKe,KAAKjB,MAAME,UAAjB,kBAA4BW,EAAOS,Q,sCAInCF,GAAI,IAAD,OAGf,GAFAA,EAAEM,iBACaT,KAAKjB,MAAMO,QAAQoB,QAAO,SAAChD,GAAD,OAAaA,EAAQ+B,UAAY,EAAKV,MAAME,SAASQ,WAAS,GAEnGkB,MAAM,oDACH,CACH,IAAMC,EAAe,CACjBnB,QAASO,KAAKjB,MAAME,SAASQ,QAC7BD,SAAUQ,KAAKjB,MAAME,SAASO,SAC9BE,UAAWM,KAAKjB,MAAME,SAASS,WAEnC1C,EAASK,IAAI,SAASM,KAAKiD,GAC3BZ,KAAKC,SAAS,CAACjB,WAAW,IAC1BgB,KAAKE,c,uCAIK,IAAD,OACb,GAAGF,KAAKjB,MAAMC,UACV,OACI,uBAAM6B,SAAU,SAACV,GAAD,OAAO,EAAKW,gBAAgBX,IAA5C,UACI,uBAAOG,KAAK,OAAOV,KAAK,UAAUmB,YAAY,iBAASC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC5H,uBAAOb,KAAK,OAAOV,KAAK,WAAWmB,YAAY,yBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAClI,uBAAOb,KAAK,OAAOV,KAAK,YAAYmB,YAAY,wBAAeC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACpI,wBAAQb,KAAK,SAAb,0B,uCAMCH,GACb,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,YAATA,GAA+B,aAATA,IACrBS,EAAQA,EAAMG,eAGlBR,KAAKC,SAAS,CACVmB,UAAU,2BAAKpB,KAAKjB,MAAMqC,WAAjB,kBAA6BxB,EAAOS,Q,uCAIpCF,GAAI,IAEbkB,EAFY,OAChBlB,EAAEM,iBAEFzD,EAASK,IAAI,SAASC,GAAG,SAAS,SAACC,GAC/BA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM6B,UAAY,EAAKV,MAAMqC,UAAU3B,UAC9C4B,EAAM3D,EAAQ2D,WAI1B,IAAMC,EAAS,CACX7B,QAASO,KAAKjB,MAAMqC,UAAU3B,QAC9BD,SAAUQ,KAAKjB,MAAMqC,UAAU5B,SAC/BE,UAAWM,KAAKjB,MAAMqC,UAAU1B,UAAU6B,eAE9CvE,EAASK,IAAI,SAASmE,MAAMH,GAAKI,IAAIH,GACrCtB,KAAKC,SAAS,CAAEf,YAAY,IAC5Bc,KAAKE,a,wCAGU,IAAD,OACd,GAAGF,KAAKjB,MAAMG,WACV,OACI,uBAAM2B,SAAU,SAACV,GAAD,OAAO,EAAKuB,iBAAiBvB,IAA7C,UACI,uBAAOG,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMqC,UAAU3B,QAASG,KAAK,UAAUmB,YAAY,iBAASC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IACzK,uBAAOvB,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMqC,UAAU5B,SAAUI,KAAK,WAAWmB,YAAY,yBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAChL,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMqC,UAAU1B,UAAWE,KAAK,YAAYmB,YAAY,wBAAeC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACnL,wBAAQb,KAAK,SAAb,2B,gCAMN5C,GACHsC,KAAKjB,MAAMG,WACVyB,MAAM,6DAENX,KAAKC,SAAS,CACVmB,UAAW1D,EACXwB,YAAY,M,kCAKZxB,GACR,IAAIoE,EACJ9E,EAASK,IAAI,SAASC,GAAG,SAAS,SAACC,GAC/BA,EAASE,SAAQ,SAACsE,GACXA,EAAInE,MAAM6B,UAAY/B,EAAQ+B,UAC7BqC,EAAWC,EAAIV,WAI3BrE,EAASK,IAAI,SAASmE,MAAMM,GAAUE,SACtChC,KAAKE,a,iCAGG,IAAD,OACP,OAAOF,KAAKjB,MAAMO,QAAQ2C,KAAI,SAACvE,EAASwE,GAAV,OAC1B,+BACI,6BAAKA,EAAQ,IACb,6BAAKxE,EAAQ+B,UACb,6BAAK/B,EAAQ8B,WACb,6BAAK9B,EAAQiC,aACb,6BAAKjC,EAAQgC,YACb,+BACI,wBAAQyC,QAAS,kBAAM,EAAKrD,MAAMsD,aAAa,aAAc1E,EAAQ+B,UAArE,iBACA,wBAAQ0C,QAAS,kBAAM,EAAKf,UAAU1D,IAAtC,sBACA,wBAAQyE,QAAS,kBAAM,EAAKE,YAAY3E,IAAxC,yBATCwE,Q,wCAeE,IAAD,OACd,GAAGlC,KAAKjB,MAAMO,QACV,OACI,sBAAKgD,UAAU,aAAf,UACI,uDACCtC,KAAKuC,iBACLvC,KAAKwC,kBACN,gCACI,kCACI,+BACI,qCACA,gDACA,wDACA,yDACA,uDACA,6BACI,wBAAQL,QAAS,kBAAM,EAAKlC,SAAS,CAAEjB,WAAY,EAAKD,MAAMC,aAA9D,0BAGPgB,KAAKyC,qB,+BAS1B,OACI,qBAAKH,UAAU,YAAf,SACKtC,KAAK0C,wB,GA3MEC,cCoOTC,G,yDAlOX,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACX6D,WAAY,GACZ3D,YAAY,GALD,E,sLH8Ed,IAAIhC,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACnC,IAAIqF,EAAU,GACdrF,EAASE,SAAQ,SAACC,GAChBkF,EAAQjF,KAAKD,EAAQE,UAEvBT,EAAQyF,S,OGxENE,GAFIA,E,QAEgBjD,MAAK,SAACC,EAAGC,GACzB,OAAGD,EAAEJ,UAAYK,EAAEL,UAAkB,EAClCI,EAAEJ,UAAYK,EAAEL,WAAmB,EAC/B,KAGXM,KAAKC,SAAS,CACV8C,SAAUD,I,gJAKd9C,KAAKgD,Y,sCAGO7C,GACZ,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KACdnB,EAAOV,EAAY,IAMzB,GAJY,cAAT6B,GAAiC,aAATA,IACvBS,EAAQA,EAAMkB,eAGN,aAAT3B,EAAqB,CACpB,IAAMqD,EAAO1E,EAAY8B,EAAO5B,GAChCuB,KAAKC,SAAS,CACV4C,WAAW,2BAAK7C,KAAKjB,MAAM8D,YAAjB,IAA6B3E,KAAMO,EAAMyE,KAAMD,WAG7DjD,KAAKC,SAAS,CACV4C,WAAW,2BAAK7C,KAAKjB,MAAM8D,YAAjB,kBAA8BjD,EAAOS,Q,sCAK3CF,GAAI,IAEZmB,EAFW,OACfnB,EAAEM,iBAEFzD,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM8B,YAAc,EAAKX,MAAM8D,WAAWnD,YACjD4B,EAAS5D,EAAQE,aAI1B0D,EACCX,MAAM,qCAEN3D,EAASK,IAAI,WAAWM,KAAKqC,KAAKjB,MAAM8D,YACxC7C,KAAKC,SAAS,CAAEjB,WAAW,IAC3BgB,KAAKgD,a,uCAIK,IAAD,OACb,GAAGhD,KAAKjB,MAAMC,UACV,OACI,uBAAM6B,SAAU,SAACV,GAAD,OAAO,EAAKW,gBAAgBX,IAA5C,UACI,uBAAOG,KAAK,OAAOV,KAAK,YAAYmB,YAAY,KAAKC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC1H,uBAAOb,KAAK,OAAOV,KAAK,WAAWmB,YAAY,oBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAChI,uBAAOb,KAAK,OAAOV,KAAK,WAAWmB,YAAY,qBAAWC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC/H,uBAAOb,KAAK,OAAOV,KAAK,OAAOmB,YAAY,uBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC5H,yBAAQvB,KAAK,SAASoB,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,EAA3F,UACI,wBAAQd,MAAM,GAAd,yCACA,wBAAQA,MAAO,EAAf,iBACA,wBAAQA,MAAO,EAAf,wBAEJ,uBAAOC,KAAK,OAAOV,KAAK,cAAcmB,YAAY,eAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACnI,uBAAOb,KAAK,OAAOV,KAAK,QAAQmB,YAAY,oCAAgBC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACjI,wBAAQb,KAAK,SAAb,0B,uCAMCH,GACb,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KACdnB,EAAOV,EAAY,IAMzB,GAJY,cAAT6B,GAAiC,aAATA,IACvBS,EAAQA,EAAMkB,eAGN,aAAT3B,EAAqB,CACpB,IAAMqD,EAAO1E,EAAY8B,EAAO5B,GAChCuB,KAAKC,SAAS,CACVkD,YAAY,2BAAKnD,KAAKjB,MAAMoE,aAAjB,IAA8BjF,KAAMO,EAAMyE,KAAMD,WAG/DjD,KAAKC,SAAS,CACVkD,YAAY,2BAAKnD,KAAKjB,MAAMoE,aAAjB,kBAA+BvD,EAAOS,Q,uCAK5CF,GAAI,IAEbkB,EAFY,OAChBlB,EAAEM,iBAEFzD,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM8B,YAAc,EAAKX,MAAMoE,YAAYzD,YAClD2B,EAAM3D,EAAQ2D,WAI1BrE,EAASK,IAAI,WAAWmE,MAAMH,GAAKI,IAAIzB,KAAKjB,MAAMoE,aAClDnD,KAAKC,SAAS,CAAEf,YAAY,IAC5Bc,KAAKgD,Y,wCAGU,IAAD,OACd,GAAGhD,KAAKjB,MAAMG,WACV,OACI,uBAAM2B,SAAU,SAACV,GAAD,OAAO,EAAKuB,iBAAiBvB,IAA7C,UACI,uBAAOG,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMoE,YAAYzD,UAAWE,KAAK,YAAYmB,YAAY,KAAKC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IAC3K,uBAAOvB,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMoE,YAAYC,SAAUxD,KAAK,WAAWmB,YAAY,oBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IAChL,uBAAOvB,KAAK,OAAOV,KAAK,WAAWmB,YAAY,qBAAWC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAChI,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMoE,YAAYvD,KAAMA,KAAK,OAAOmB,YAAY,uBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACxK,yBAAQvB,KAAK,SAAS+B,aAAc3B,KAAKjB,MAAMoE,YAAYE,OAAQrC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,EAAzI,UACI,wBAAQd,MAAO,EAAf,iBACA,wBAAQA,MAAO,EAAf,wBAEJ,uBAAOC,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMoE,YAAYG,YAAa1D,KAAK,cAAcmB,YAAY,eAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACtL,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMoE,YAAYI,MAAO3D,KAAK,QAAQmB,YAAY,oCAAgBC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAC9K,wBAAQb,KAAK,SAAb,2B,kCAMJ5C,GACLsC,KAAKjB,MAAMG,WACVyB,MAAM,6DAENX,KAAKC,SAAS,CACVkD,YAAazF,EACbwB,YAAY,M,oCAKVxB,GACV,IAAI2D,EACJrE,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACsE,GACXA,EAAInE,MAAM8B,YAAchC,EAAQgC,YAC/B2B,EAAMU,EAAIV,WAItBrE,EAASK,IAAI,WAAWmE,MAAMH,GAAKW,SACnChC,KAAKgD,Y,iCAGG,IAAD,OACP,OAAOhD,KAAKjB,MAAMgE,SAASd,KAAI,SAACvE,EAASwE,GAAV,OAC3B,+BACI,6BAAKA,EAAQ,IACb,6BAAKxE,EAAQgC,YACb,6BAAKhC,EAAQ0F,WACb,6BAAK1F,EAAQkC,OACb,6BAAK4D,SAAS9F,EAAQ2F,QAAU,UAAO,QACvC,6BAAK3F,EAAQ4F,cACb,6BAAK5F,EAAQ6F,QACb,+BACI,wBAAQpB,QAAS,kBAAM,EAAKgB,YAAYzF,IAAxC,sBACA,wBAAQyE,QAAS,kBAAM,EAAKsB,cAAc/F,IAA1C,yBAVCwE,Q,sCAgBA,IAAD,OACZ,GAAGlC,KAAKjB,MAAMgE,SACV,OACI,sBAAKT,UAAU,UAAf,UACI,8DACCtC,KAAKuC,iBACLvC,KAAKwC,kBACN,gCACI,kCACI,+BACI,qCACA,oCACA,mDACA,sDACA,mDACA,8CACA,mEACA,6BACI,wBAAQL,QAAS,kBAAM,EAAKlC,SAAS,CAAEjB,WAAY,EAAKD,MAAMC,aAA9D,0BAGPgB,KAAKyC,qB,+BAS1B,OACI,qBAAKH,UAAU,YAAf,SACKtC,KAAK0D,sB,GA7NAf,cCmOP7E,G,yDAlOX,WAAYgB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACX2E,WAAY,GACZzE,YAAY,GALD,E,sLAUMrB,I,OAErB+F,GAFIA,E,QAEgB/D,MAAK,SAACC,EAAGC,GACzB,OAAGD,EAAE+D,UAAY9D,EAAE8D,UAAkB,EAClC/D,EAAE+D,UAAY9D,EAAE8D,WAAmB,EAC/B,KAGX7D,KAAKC,SAAS,CACV6D,SAAUF,I,gJAKd5D,KAAKgD,Y,sCAGO7C,GACZ,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KACdnB,EAAOV,EAAY,IAMzB,GAJY,cAAT6B,GAAiC,aAATA,IACvBS,EAAQA,EAAMkB,eAGN,aAAT3B,EAAqB,CACpB,IAAMqD,EAAO1E,EAAY8B,EAAO5B,GAChCuB,KAAKC,SAAS,CACV0D,WAAW,2BAAK3D,KAAKjB,MAAM4E,YAAjB,IAA6BzF,KAAMO,EAAMyE,KAAMD,WAG7DjD,KAAKC,SAAS,CACV0D,WAAW,2BAAK3D,KAAKjB,MAAM4E,YAAjB,kBAA8B/D,EAAOS,Q,sCAK3CF,GAAI,IAEZmB,EAFW,OACfnB,EAAEM,iBAEFzD,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAMiG,YAAc,EAAK9E,MAAM4E,WAAWE,YACjDvC,EAAS5D,EAAQE,aAI1B0D,EACCX,MAAM,qCAEN3D,EAASK,IAAI,WAAWM,KAAKqC,KAAKjB,MAAM4E,YACxC3D,KAAKC,SAAS,CAAEjB,WAAW,IAC3BgB,KAAKgD,a,uCAIK,IAAD,OACb,GAAGhD,KAAKjB,MAAMC,UACV,OACI,uBAAM6B,SAAU,SAACV,GAAD,OAAO,EAAKW,gBAAgBX,IAA5C,UACI,uBAAOG,KAAK,OAAOV,KAAK,YAAYmB,YAAY,KAAKC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC1H,uBAAOb,KAAK,OAAOV,KAAK,WAAWmB,YAAY,oBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAChI,uBAAOb,KAAK,OAAOV,KAAK,WAAWmB,YAAY,qBAAWC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC/H,uBAAOb,KAAK,OAAOV,KAAK,OAAOmB,YAAY,uBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC5H,yBAAQvB,KAAK,SAASoB,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,EAA3F,UACI,wBAAQd,MAAM,GAAd,yCACA,wBAAQA,MAAO,EAAf,iBACA,wBAAQA,MAAO,EAAf,wBAEJ,uBAAOC,KAAK,OAAOV,KAAK,cAAcmB,YAAY,eAAYC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACnI,uBAAOb,KAAK,OAAOV,KAAK,QAAQmB,YAAY,oCAAgBC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACjI,wBAAQb,KAAK,SAAb,0B,uCAMCH,GACb,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KACdnB,EAAOV,EAAY,IAMzB,GAJY,cAAT6B,GAAiC,aAATA,IACvBS,EAAQA,EAAMkB,eAGN,aAAT3B,EAAqB,CACpB,IAAMqD,EAAO1E,EAAY8B,EAAO5B,GAChCuB,KAAKC,SAAS,CACV8D,YAAY,2BAAK/D,KAAKjB,MAAMgF,aAAjB,IAA8B7F,KAAMO,EAAMyE,KAAMD,WAG/DjD,KAAKC,SAAS,CACV8D,YAAY,2BAAK/D,KAAKjB,MAAMgF,aAAjB,kBAA+BnE,EAAOS,Q,uCAK5CF,GAAI,IAEbkB,EAFY,OAChBlB,EAAEM,iBAEFzD,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAMiG,YAAc,EAAK9E,MAAMgF,YAAYF,YAClDxC,EAAM3D,EAAQ2D,WAI1BrE,EAASK,IAAI,WAAWmE,MAAMH,GAAKI,IAAIzB,KAAKjB,MAAMgF,aAClD/D,KAAKC,SAAS,CAAEf,YAAY,IAC5Bc,KAAKgD,Y,wCAGU,IAAD,OACd,GAAGhD,KAAKjB,MAAMG,WACV,OACI,uBAAM2B,SAAU,SAACV,GAAD,OAAO,EAAKuB,iBAAiBvB,IAA7C,UACI,uBAAOG,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYF,UAAWjE,KAAK,YAAYmB,YAAY,KAAKC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IAC3K,uBAAOvB,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYX,SAAUxD,KAAK,WAAWmB,YAAY,oBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IAChL,uBAAOvB,KAAK,OAAOV,KAAK,WAAWmB,YAAY,qBAAWC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAChI,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYnE,KAAMA,KAAK,OAAOmB,YAAY,uBAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACxK,yBAAQvB,KAAK,SAAS+B,aAAc3B,KAAKjB,MAAMgF,YAAYV,OAAQrC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,EAAzI,UACI,wBAAQd,MAAO,EAAf,iBACA,wBAAQA,MAAO,EAAf,wBAEJ,uBAAOC,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYT,YAAa1D,KAAK,cAAcmB,YAAY,eAAYC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACtL,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYR,MAAO3D,KAAK,QAAQmB,YAAY,oCAAgBC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAC9K,wBAAQb,KAAK,SAAb,2B,kCAMJ5C,GACLsC,KAAKjB,MAAMG,WACVyB,MAAM,6DAENX,KAAKC,SAAS,CACV8D,YAAarG,EACbwB,YAAY,M,oCAKVxB,GACV,IAAI2D,EACJrE,EAASK,IAAI,WAAWC,GAAG,SAAS,SAACC,GACjCA,EAASE,SAAQ,SAACsE,GACXA,EAAInE,MAAMiG,YAAcnG,EAAQmG,YAC/BxC,EAAMU,EAAIV,WAItBrE,EAASK,IAAI,WAAWmE,MAAMH,GAAKW,SACnChC,KAAKgD,Y,iCAGG,IAAD,OACP,OAAOhD,KAAKjB,MAAM+E,SAAS7B,KAAI,SAACvE,EAASwE,GAAV,OAC3B,+BACI,6BAAKA,EAAQ,IACb,6BAAKxE,EAAQmG,YACb,6BAAKnG,EAAQ0F,WACb,6BAAK1F,EAAQkC,OACb,6BAAK4D,SAAS9F,EAAQ2F,QAAU,UAAO,QACvC,6BAAK3F,EAAQ4F,cACb,6BAAK5F,EAAQ6F,QACb,+BACI,wBAAQpB,QAAS,kBAAM,EAAK4B,YAAYrG,IAAxC,sBACA,wBAAQyE,QAAS,kBAAM,EAAK6B,cAActG,IAA1C,yBAVCwE,Q,sCAgBA,IAAD,OACZ,GAAGlC,KAAKjB,MAAM+E,SACV,OACI,sBAAKxB,UAAU,UAAf,UACI,4DACCtC,KAAKuC,iBACLvC,KAAKwC,kBACN,gCACI,kCACI,+BACI,qCACA,oCACA,mDACA,sDACA,mDACA,8CACA,mEACA,6BACI,wBAAQL,QAAS,kBAAM,EAAKlC,SAAS,CAAEjB,WAAY,EAAKD,MAAMC,aAA9D,0BAGPgB,KAAKyC,qB,+BAS1B,OACI,qBAAKH,UAAU,YAAf,SACKtC,KAAKiE,sB,GA7NAtB,cCoNPuB,G,yDApNX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACX2E,WAAY,GACZzE,YAAY,GALD,E,iML2Cd,IAAIhC,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,gBAAgBC,GAAG,SAAS,SAACC,GACxC,IAAI4G,EAAc,GAClB5G,EAASE,SAAQ,SAACC,GAChByG,EAAYxG,KAAKD,EAAQE,UAE3BT,EAAQgH,S,cKvCAC,E,gBACiBvG,I,OAAjB+F,E,OAEFE,EAAW,GAEKM,EAAa1D,QAAO,SAAChD,GAAD,OAAaA,EAAQ+B,UAAY,EAAKX,MAAMW,WACxEhC,SAAQ,SAACC,GACjBkG,EAASnG,SAAQ,SAACsE,GACd,GAAGrE,EAAQ+B,UAAY,EAAKX,MAAMW,SAAW/B,EAAQmG,YAAc9B,EAAI8B,UAAW,CAC9E,IAAMQ,EAAU,CACZR,UAAWnG,EAAQmG,UACnBS,MAAO5G,EAAQ4G,MACfC,MAAO7G,EAAQ6G,MACfC,YAAazC,EAAInC,MAErBkE,EAASnG,KAAK0G,UAK1BP,EAAWA,EAASjE,MAAK,SAACC,EAAGC,GACzB,OAAGD,EAAE+D,UAAY9D,EAAE8D,UAAkB,EAClC/D,EAAE+D,UAAY9D,EAAE8D,WAAmB,EAC/B,KAGX7D,KAAKC,SAAS,CAAE6D,SAAUA,I,iJAI1B9D,KAAKgD,Y,sCAGO7C,GACZ,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,cAATA,IACCS,EAAQA,EAAMkB,eAGlBvB,KAAKC,SAAS,CACV0D,WAAW,2BAAK3D,KAAKjB,MAAM4E,YAAjB,kBAA8B/D,EAAOS,Q,sCAIvCF,GAAI,IAAD,OAGf,GAFAA,EAAEM,iBACaT,KAAKjB,MAAM+E,SAASpD,QAAO,SAAChD,GAAD,OAAaA,EAAQmG,YAAc,EAAK9E,MAAM4E,WAAWE,aAAW,GAE1GlD,MAAM,oDACH,CACH,IAAM8D,EAAc,CAChBhF,QAASO,KAAKlB,MAAMW,QACpBoE,UAAW7D,KAAKjB,MAAM4E,WAAWE,UACjCS,MAAOtE,KAAKjB,MAAM4E,WAAWW,MAC7BC,MAAOvE,KAAKjB,MAAM4E,WAAWY,OAEjCvH,EAASK,IAAI,gBAAgBM,KAAK8G,GAClCzE,KAAKC,SAAS,CAAEjB,WAAW,IAC3BgB,KAAKgD,a,uCAIK,IAAD,OACb,GAAGhD,KAAKjB,MAAMC,UACV,OACI,uBAAM6B,SAAU,SAACV,GAAD,OAAO,EAAKW,gBAAgBX,IAA5C,UACI,uBAAOG,KAAK,OAAOV,KAAK,YAAYmB,YAAY,sBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACnI,uBAAOb,KAAK,OAAOV,KAAK,QAAQmB,YAAY,6BAAcC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC/H,uBAAOb,KAAK,OAAOV,KAAK,QAAQmB,YAAY,iBAAOC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IACxH,wBAAQb,KAAK,SAAb,0B,uCAMCH,GACb,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,cAATA,IACCS,EAAQA,EAAMkB,eAGlBvB,KAAKC,SAAS,CACV8D,YAAY,2BAAK/D,KAAKjB,MAAMgF,aAAjB,kBAA+BnE,EAAOS,Q,uCAIxCF,GAAI,IAEbkB,EAFY,OAChBlB,EAAEM,iBAEFzD,EAASK,IAAI,gBAAgBC,GAAG,SAAS,SAACC,GACtCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM6B,UAAY,EAAKX,MAAMW,SAAW/B,EAAQE,MAAMiG,YAAc,EAAK9E,MAAMgF,YAAYF,YAClGxC,EAAM3D,EAAQ2D,WAI1B,IAAMC,EAAS,CACX7B,QAASO,KAAKlB,MAAMW,QACpBoE,UAAW7D,KAAKjB,MAAMgF,YAAYF,UAClCS,MAAOtE,KAAKjB,MAAMgF,YAAYO,MAC9BC,MAAOvE,KAAKjB,MAAMgF,YAAYQ,OAElCvH,EAASK,IAAI,gBAAgBmE,MAAMH,GAAKI,IAAIH,GAC5CtB,KAAKC,SAAS,CAAEf,YAAY,IAC5Bc,KAAKgD,Y,wCAGU,IAAD,OACd,GAAGhD,KAAKjB,MAAMG,WACV,OACI,uBAAM2B,SAAU,SAACV,GAAD,OAAO,EAAKuB,iBAAiBvB,IAA7C,UACI,uBAAOG,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYF,UAAWjE,KAAK,YAAYmB,YAAY,sBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IACpL,uBAAOvB,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYO,MAAO1E,KAAK,QAAQmB,YAAY,6BAAcC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAC5K,uBAAOb,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAMgF,YAAYQ,MAAO3E,KAAK,QAAQmB,YAAY,iBAAOC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IACrK,wBAAQb,KAAK,SAAb,2B,kCAMJ5C,GACLsC,KAAKjB,MAAMG,WACVyB,MAAM,6DAENX,KAAKC,SAAS,CACV8D,YAAarG,EACbwB,YAAY,M,oCAKVxB,GACV,IAAI2D,EACJrE,EAASK,IAAI,gBAAgBC,GAAG,SAAS,SAACC,GACtCA,EAASE,SAAQ,SAACsE,GACXA,EAAInE,MAAMiG,YAAcnG,EAAQmG,YAC/BxC,EAAMU,EAAIV,WAItBrE,EAASK,IAAI,gBAAgBmE,MAAMH,GAAKW,SACxChC,KAAKgD,Y,mCAGK,IAAD,OACT,OAAOhD,KAAKjB,MAAM+E,SAAS7B,KAAI,SAACvE,EAASwE,GAAV,OAC3B,+BACI,6BAAKA,EAAQ,IACb,6BAAKxE,EAAQmG,YACb,6BAAKnG,EAAQ8G,cACb,6BAAK9G,EAAQ4G,QACb,6BAAK5G,EAAQ6G,QACb,+BACI,wBAAQpC,QAAS,kBAAM,EAAK4B,YAAYrG,IAAxC,sBACA,wBAAQyE,QAAS,kBAAM,EAAK6B,cAActG,IAA1C,yBARCwE,Q,wCAcE,IAAD,OACd,GAAGlC,KAAKjB,MAAM+E,SACV,OACI,sBAAKxB,UAAU,aAAf,UACI,yDAAkBtC,KAAKlB,MAAMW,WAC5BO,KAAKuC,iBACLvC,KAAKwC,kBACN,gCACI,kCACI,+BACI,qCACA,qDACA,sDACA,4DACA,gDACA,6BACI,wBAAQL,QAAS,kBAAM,EAAKlC,SAAS,CAAEjB,WAAY,EAAKD,MAAMC,aAA9D,0BAGPgB,KAAK0E,uB,+BAS1B,OACI,qBAAKpC,UAAU,YAAf,SACKtC,KAAK2E,wB,GA/MEhC,cCyLTnF,G,yDAzLX,WAAYsB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACX4F,UAAW,GACX1F,YAAY,GALD,E,sLAUKjC,I,OAEpBoC,GAFIA,E,QAEcQ,MAAK,SAACC,EAAGC,GACvB,OAAGD,EAAEN,SAAWO,EAAEP,SAAiB,EAChCM,EAAEN,SAAWO,EAAEP,UAAkB,EAC7B,KAGXQ,KAAKC,SAAS,CACV4E,QAASxF,I,gJAKbW,KAAKgD,Y,sCAGO7C,GACZ,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,aAATA,IACCS,EAAQA,EAAMG,eAGlBR,KAAKC,SAAS,CACV2E,UAAU,2BAAK5E,KAAKjB,MAAM6F,WAAjB,kBAA6BhF,EAAOS,Q,sCAIrCF,GAAI,IAEZmB,EAFW,OACfnB,EAAEM,iBAEFzD,EAASK,IAAI,UAAUC,GAAG,SAAS,SAACC,GAChCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM4B,WAAa,EAAKT,MAAM6F,UAAUpF,WAC/C8B,EAAS5D,EAAQE,aAI1B0D,EACCX,MAAM,yDAEN3D,EAASK,IAAI,UAAUM,KAAKqC,KAAKjB,MAAM6F,WACvC5E,KAAKC,SAAS,CAAEjB,WAAW,IAC3BgB,KAAKgD,a,uCAIK,IAAD,OACb,GAAGhD,KAAKjB,MAAMC,UACV,OACI,uBAAM6B,SAAU,SAACV,GAAD,OAAO,EAAKW,gBAAgBX,IAA5C,UACI,uBAAOG,KAAK,OAAOV,KAAK,WAAWmB,YAAY,yBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAClI,uBAAOb,KAAK,OAAOV,KAAK,OAAOmB,YAAY,0BAAeC,SAAU,SAACb,GAAD,OAAO,EAAKc,gBAAgBd,IAAIe,aAAa,MAAMC,UAAQ,IAC/H,wBAAQb,KAAK,SAAb,0B,uCAMCH,GACb,IAAMC,EAASD,EAAEC,OACbC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC3DT,EAAOQ,EAAOR,KAER,aAATA,IACCS,EAAQA,EAAMG,eAGlBR,KAAKC,SAAS,CACV6E,WAAW,2BAAK9E,KAAKjB,MAAM+F,YAAjB,kBAA8BlF,EAAOS,Q,uCAItCF,GAAI,IAEbkB,EAFY,OAChBlB,EAAEM,iBAEFzD,EAASK,IAAI,UAAUC,GAAG,SAAS,SAACC,GAChCA,EAASE,SAAQ,SAACC,GACXA,EAAQE,MAAM4B,WAAa,EAAKT,MAAM+F,WAAWtF,WAChD6B,EAAM3D,EAAQ2D,WAI1BrE,EAASK,IAAI,UAAUmE,MAAMH,GAAKI,IAAIzB,KAAKjB,MAAM+F,YACjD9E,KAAKC,SAAS,CAAEf,YAAY,IAC5Bc,KAAKgD,Y,wCAGU,IAAD,OACd,GAAGhD,KAAKjB,MAAMG,WACV,OACI,uBAAM2B,SAAU,SAACV,GAAD,OAAO,EAAKuB,iBAAiBvB,IAA7C,UACI,uBAAOG,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAM+F,WAAWtF,SAAUI,KAAK,WAAWmB,YAAY,yBAAcC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMW,UAAQ,IACjL,uBAAOvB,KAAK,OAAOqB,aAAc3B,KAAKjB,MAAM+F,WAAWlF,KAAMA,KAAK,OAAOmB,YAAY,0BAAeC,SAAU,SAACb,GAAD,OAAO,EAAKyB,iBAAiBzB,IAAIe,aAAa,MAAMC,UAAQ,IAC1K,wBAAQb,KAAK,SAAb,2B,iCAML5C,GACJsC,KAAKjB,MAAMG,WACVyB,MAAM,6DAENX,KAAKC,SAAS,CACV6E,WAAYpH,EACZwB,YAAY,M,mCAKXxB,GACT,IAAI2D,EACJrE,EAASK,IAAI,UAAUC,GAAG,SAAS,SAACC,GAChCA,EAASE,SAAQ,SAACsE,GACXA,EAAInE,MAAM4B,WAAa9B,EAAQ8B,WAC9B6B,EAAMU,EAAIV,WAItBrE,EAASK,IAAI,UAAUmE,MAAMH,GAAKW,SAClChC,KAAKgD,Y,kCAGI,IAAD,OACR,OAAOhD,KAAKjB,MAAM8F,QAAQ5C,KAAI,SAACvE,EAASwE,GAAV,OAC1B,+BACI,6BAAKA,EAAQ,IACb,6BAAKxE,EAAQ8B,WACb,6BAAK9B,EAAQkC,OACb,+BACI,wBAAQuC,QAAS,kBAAM,EAAK2C,WAAWpH,IAAvC,sBACA,wBAAQyE,QAAS,kBAAM,EAAK4C,aAAarH,IAAzC,yBANCwE,Q,qCAYD,IAAD,OACX,GAAGlC,KAAKjB,MAAM8F,QACV,OACI,sBAAKvC,UAAU,SAAf,UACI,+DACCtC,KAAKuC,iBACLvC,KAAKwC,kBACN,gCACI,kCACI,+BACI,qCACA,wDACA,yDACA,6BACI,wBAAQL,QAAS,kBAAM,EAAKlC,SAAS,CAAEjB,WAAY,EAAKD,MAAMC,aAA9D,0BAGPgB,KAAKgF,sB,+BAS1B,OACI,qBAAK1C,UAAU,YAAf,SACKtC,KAAKiF,qB,GApLDtC,cCoDNuC,G,yDA9CX,WAAYpG,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToG,OAAQ,cAHG,E,qDAOT,IAAD,OACL,OAAQnF,KAAKjB,MAAMoG,QACf,IAAK,aACD,OAAO,cAAC,EAAD,CAAW/C,aAAc,SAAC+C,EAAQ1F,GAAT,OAAqB,EAAK2C,aAAa+C,EAAQ1F,MACnF,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,SACD,OAAO,cAAC,EAAD,IACX,IAAK,aACD,OAAO,cAAC,EAAD,CAAWA,QAASO,KAAKjB,MAAMU,a,mCAMrC0F,EAAQ1F,GACjBO,KAAKC,SAAS,CACVkF,OAAQA,EACR1F,QAASA,M,+BAIP,IAAD,OACL,OACI,sBAAK6C,UAAU,QAAf,UACKtC,KAAKoF,SACN,sBAAK9C,UAAU,MAAf,UACI,wBAAQH,QAAS,kBAAM,EAAKC,aAAa,eAAzC,sBACA,wBAAQD,QAAS,kBAAM,EAAKC,aAAa,YAAzC,6BACA,wBAAQD,QAAS,kBAAM,EAAKC,aAAa,YAAzC,2BACA,wBAAQD,QAAS,kBAAM,EAAKC,aAAa,WAAzC,wC,GAxCAO,cCmCL0C,G,yDAzCX,WAAYvG,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,yDAKNoB,GACTH,KAAKC,SAAL,eACKE,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,U,mCAIrBF,GACTA,EAAEM,iBACF,IAAM6E,EAAU,CACZlC,SAAUpD,KAAKjB,MAAMqE,SAAS7B,cAC9BgE,SAAUvF,KAAKjB,MAAMwG,UAEzBvF,KAAKlB,MAAM0G,aAAaF,K,+BAGlB,IAAD,OACL,OACI,qBAAKhD,UAAU,QAAf,SACI,uBAAMzB,SAAU,SAACV,GAAD,OAAO,EAAKsF,aAAatF,IAAzC,UACI,iDACA,gCACI,uBAAOuF,QAAQ,iBAAf,+BACA,uBAAO9F,KAAK,WAAW+F,GAAG,iBAAiB3E,SAAU,SAACb,GAAD,OAAO,EAAKyF,aAAazF,IAAIG,KAAK,OAAOY,aAAa,MAAMC,UAAQ,OAE7H,gCACI,uBAAOuE,QAAQ,iBAAf,gCACA,uBAAO9F,KAAK,WAAW+F,GAAG,iBAAiB3E,SAAU,SAACb,GAAD,OAAO,EAAKyF,aAAazF,IAAIG,KAAK,WAAWY,aAAa,MAAMC,UAAQ,OAEjI,mBAAGgB,QAAS,kBAAMxB,MAAM,kCAAxB,yCACA,wBAAQL,KAAK,SAAb,+C,GAnCAqC,cCwCLkD,G,yDA/BX,WAAY/G,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,kGAKAuG,G,uFTad,IAAIpI,SAAQ,SAACC,EAASC,GAC3BJ,EAASK,IAAI,SAASC,GAAG,SAAS,SAACC,GACjCJ,EAAQI,EAASK,a,QSdTkI,E,QACG1C,WAAakC,EAAQlC,UAAY7E,EAAY+G,EAAQC,SAAUO,EAAM5H,QAAU4H,EAAM5C,MAC1FvC,MAAM,8CACNX,KAAKC,SAAS,CACV6F,MAAO,cAAC,EAAD,OAERnF,MAAM,kF,0IAGH,IAAD,OACT,OAAGX,KAAKjB,MAAM+G,MACH9F,KAAKjB,MAAM+G,MAEf,cAAC,EAAD,CAAON,aAAc,SAACF,GAAD,OAAa,EAAKE,aAAaF,Q,+BAI3D,OACI,8BACKtF,KAAK+F,mB,GA1BJpD,cCRlBqD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6eaa3192.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nvar Config = {\r\n  apiKey: \"AIzaSyDu7RYF7A3eaC2uedmAEUFyz1u14d1def4\",\r\n  authDomain: \"class-104.firebaseapp.com\",\r\n  databaseURL: \"https://class-104.firebaseio.com\",\r\n  projectId: \"class-104\",\r\n  storageBucket: \"class-104.appspot.com\",\r\n  messagingSenderId: \"642296584585\",\r\n  appId: \"1:642296584585:web:a63c7c9e96c03e203e6958\"\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(Config);\r\n\r\n// API\r\nconst database = firebase.database();\r\n\r\nfunction getDataRef(ref) {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(ref).on(\"value\", (snapshot) => {\r\n      let Result = [];\r\n      snapshot.forEach((element) => {\r\n        Result.push(element.val());\r\n      })\r\n      resolve(Result)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataAdmin() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"admin\").on(\"value\", (snapshot) => {\r\n      resolve(snapshot.val())\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataClass() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"class\").on(\"value\", (snapshot) => {\r\n      let Class = [];\r\n      snapshot.forEach((element) => {\r\n        Class.push(element.val());\r\n      })\r\n      resolve(Class)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataClassMember() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"class_member\").on(\"value\", (snapshot) => {\r\n      let ClassMember = [];\r\n      snapshot.forEach((element) => {\r\n        ClassMember.push(element.val());\r\n      })\r\n      resolve(ClassMember)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataCourse() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"course\").on(\"value\", (snapshot) => {\r\n      let Course = [];\r\n      snapshot.forEach((element) => {\r\n        Course.push(element.val());\r\n      })\r\n      resolve(Course)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataStudent() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"student\").on(\"value\", (snapshot) => {\r\n      let Student = [];\r\n      snapshot.forEach((element) => {\r\n        Student.push(element.val());\r\n      })\r\n      resolve(Student)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataTeacher() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n      let Teacher = [];\r\n      snapshot.forEach((element) => {\r\n        Teacher.push(element.val());\r\n      })\r\n      resolve(Teacher)\r\n    })\r\n  })\r\n}\r\n\r\nexport {\r\n  database,\r\n  getDataRef,\r\n  getDataAdmin,\r\n  getDataClass,\r\n  getDataClassMember,\r\n  getDataCourse,\r\n  getDataStudent,\r\n  getDataTeacher\r\n}","import Crypto from \"crypto-js\";\r\n\r\nexport function CREATE_SALT(length) {\r\n    const BASE64 = [\r\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\r\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n        \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"\r\n    ];\r\n\r\n    let salt = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n        const RANDOM_INDEX = Math.floor(Math.random() * BASE64.length);\r\n        salt += BASE64[RANDOM_INDEX];\r\n    }\r\n\r\n    return salt\r\n}\r\n\r\nexport function HMAC_SHA256(PASSWORD, SALT) {\r\n    const SECRET_KEY = \"lhrYDV62\";\r\n    const CIPHER_TEXT = Crypto.HmacSHA256(PASSWORD + SALT, SECRET_KEY).toString();\r\n    return CIPHER_TEXT\r\n}","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataClass, getDataCourse, database } from \"../api/Database\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/ClassList.scss\";\r\n\r\nclass ClassList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addStatus: false,\r\n            addClass: {},\r\n            editStatus: false,\r\n        };\r\n    }\r\n    \r\n    async getClass() {\r\n        const Classes = await getDataClass();\r\n        const Courses = await getDataCourse();\r\n        let classes = [];\r\n        Classes.forEach((element) => {\r\n            Courses.forEach((elementCourse) => {\r\n                if(element.courseid === elementCourse.courseid) {\r\n                    const Class = {\r\n                        classid: element.classid,\r\n                        courseid: element.courseid,\r\n                        teacherid: element.teacherid,\r\n                        coursename: elementCourse.name\r\n                    }\r\n                    classes.push(Class);\r\n                }\r\n            })\r\n        });\r\n\r\n        classes = classes.sort((a, b) => {\r\n            if(a.classid > b.classid) return 1;\r\n            if(a.classid < b.classid) return -1;\r\n            return 0;\r\n        });\r\n\r\n        this.setState({ classes: classes });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getClass();\r\n    }\r\n\r\n    handleAddChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"classid\" || name === \"courseid\") {\r\n            value = value.toUpperCase();\r\n        }\r\n\r\n        this.setState({\r\n            addClass: {...this.state.addClass, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleAddSubmit(e) {\r\n        e.preventDefault();\r\n        const result = this.state.classes.filter((element) => element.classid === this.state.addClass.classid)[0];\r\n        if(result) {\r\n            alert(\"Mã lớp đã tồn tại.\")\r\n        } else {\r\n            const ClassElement = {\r\n                classid: this.state.addClass.classid,\r\n                courseid: this.state.addClass.courseid,\r\n                teacherid: this.state.addClass.teacherid\r\n            };\r\n            database.ref(\"class\").push(ClassElement);\r\n            this.setState({addStatus: false});\r\n            this.getClass();\r\n        }\r\n    }\r\n\r\n    checkAddStatus() {\r\n        if(this.state.addStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleAddSubmit(e)}>\r\n                    <input type=\"text\" name=\"classid\" placeholder=\"Mã lớp\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"courseid\" placeholder=\"Mã khóa học\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"teacherid\" placeholder=\"Mã giáo viên\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Thêm</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleEditChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"classid\" || name === \"courseid\") {\r\n            value = value.toUpperCase();\r\n        }\r\n\r\n        this.setState({\r\n            editClass: {...this.state.editClass, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleEditSubmit(e) {\r\n        e.preventDefault();\r\n        let key;\r\n        database.ref(\"class\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().classid === this.state.editClass.classid) {\r\n                    key = element.key\r\n                }\r\n            })\r\n        })\r\n        const result = {\r\n            classid: this.state.editClass.classid,\r\n            courseid: this.state.editClass.courseid,\r\n            teacherid: this.state.editClass.teacherid.toLowerCase()\r\n        }\r\n        database.ref(\"class\").child(key).set(result);\r\n        this.setState({ editStatus: false });\r\n        this.getClass();\r\n    }\r\n\r\n    checkEditStatus() {\r\n        if(this.state.editStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={this.state.editClass.classid} name=\"classid\" placeholder=\"Mã lớp\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" defaultValue={this.state.editClass.courseid} name=\"courseid\" placeholder=\"Mã khóa học\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editClass.teacherid} name=\"teacherid\" placeholder=\"Mã giáo viên\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Lưu</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    editClass(element) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa.\")\r\n        } else {\r\n            this.setState({\r\n                editClass: element,\r\n                editStatus: true\r\n            });\r\n        }\r\n    }\r\n\r\n    removeClass(element) {\r\n        let keyClass;\r\n        database.ref(\"class\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((ele) => {\r\n                if(ele.val().classid === element.classid) {\r\n                    keyClass = ele.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"class\").child(keyClass).remove();\r\n        this.getClass();\r\n    }\r\n\r\n    mapClass() {\r\n        return this.state.classes.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element.classid}</td>\r\n                <td>{element.courseid}</td>\r\n                <td>{element.coursename}</td>\r\n                <td>{element.teacherid}</td>\r\n                <td>\r\n                    <button onClick={() => this.props.changeStatus(\"CLASS_INFO\", element.classid)}>Xem</button>\r\n                    <button onClick={() => this.editClass(element)}>Sửa</button>\r\n                    <button onClick={() => this.removeClass(element)}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderClassList() {\r\n        if(this.state.classes) {\r\n            return (\r\n                <div className=\"class_list\">\r\n                    <h1>Danh sách lớp</h1>\r\n                    {this.checkAddStatus()}\r\n                    {this.checkEditStatus()}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã lớp</th>\r\n                                <th>Mã khóa học</th>\r\n                                <th>Tên khóa học</th>\r\n                                <th>Mã giáo viên</th>\r\n                                <th>\r\n                                    <button onClick={() => this.setState({ addStatus: !this.state.addStatus })}>Thêm</button>\r\n                                </th>\r\n                            </tr>\r\n                            {this.mapClass()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderClassList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassList;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataTeacher, database } from \"../api/Database\";\r\nimport { CREATE_SALT, HMAC_SHA256 } from \"../api/Authentication\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/Teacher.scss\";\r\n\r\nclass Teacher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addStatus: false,\r\n            addTeacher: {},\r\n            editStatus: false\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        let Teachers = await getDataTeacher();\r\n\r\n        Teachers = Teachers.sort((a, b) => {\r\n            if(a.teacherid > b.teacherid) return 1;\r\n            if(a.teacherid < b.teacherid) return -1;\r\n            return 0;\r\n        });\r\n        \r\n        this.setState({\r\n            teachers: Teachers\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleAddChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const SALT = CREATE_SALT(10);\r\n\r\n        if(name === \"teacherid\" || name === \"username\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        if(name === \"password\") {\r\n            const HASH = HMAC_SHA256(value, SALT);\r\n            this.setState({\r\n                addTeacher: {...this.state.addTeacher, salt: SALT, hash: HASH}\r\n            })\r\n        } else {\r\n            this.setState({\r\n                addTeacher: {...this.state.addTeacher, [name]: value}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddSubmit(e) {\r\n        e.preventDefault();\r\n        let result;\r\n        database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().teacherid === this.state.addTeacher.teacherid) {\r\n                    result = element.val();\r\n                }\r\n            })\r\n        });\r\n        if(result) {\r\n            alert(\"ID đã tồn tại.\")\r\n        } else {\r\n            database.ref(\"teacher\").push(this.state.addTeacher);\r\n            this.setState({ addStatus: false });\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    checkAddStatus() {\r\n        if(this.state.addStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleAddSubmit(e)}>\r\n                    <input type=\"text\" name=\"teacherid\" placeholder=\"ID\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Tài khoản\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"password\" placeholder=\"Mật khẩu\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Họ và tên\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <select name=\"gender\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required>\r\n                        <option value=\"\">Chọn giới tính</option>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                    <input type=\"date\" name=\"dateofbirth\" placeholder=\"Ngày sinh\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"phone\" placeholder=\"Số điện thoại\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Thêm</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleEditChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const SALT = CREATE_SALT(10);\r\n\r\n        if(name === \"teacherid\" || name === \"username\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        if(name === \"password\") {\r\n            const HASH = HMAC_SHA256(value, SALT);\r\n            this.setState({\r\n                editTeacher: {...this.state.editTeacher, salt: SALT, hash: HASH}\r\n            })\r\n        } else {\r\n            this.setState({\r\n                editTeacher: {...this.state.editTeacher, [name]: value}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditSubmit(e) {\r\n        e.preventDefault();\r\n        let key;\r\n        database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().teacherid === this.state.editTeacher.teacherid) {\r\n                    key = element.key\r\n                }\r\n            })\r\n        });\r\n        database.ref(\"teacher\").child(key).set(this.state.editTeacher);\r\n        this.setState({ editStatus: false });\r\n        this.getData()\r\n    }\r\n\r\n    checkEditStatus() {\r\n        if(this.state.editStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={this.state.editTeacher.teacherid} name=\"teacherid\" placeholder=\"ID\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" defaultValue={this.state.editTeacher.username} name=\"username\" placeholder=\"Tài khoản\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" name=\"password\" placeholder=\"Mật khẩu\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editTeacher.name} name=\"name\" placeholder=\"Họ và tên\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <select name=\"gender\" defaultValue={this.state.editTeacher.gender} onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                    <input type=\"date\" defaultValue={this.state.editTeacher.dateofbirth} name=\"dateofbirth\" placeholder=\"Ngày sinh\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editTeacher.phone} name=\"phone\" placeholder=\"Số điện thoại\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Lưu</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    editTeacher(element) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa.\")\r\n        } else {\r\n            this.setState({\r\n                editTeacher: element,\r\n                editStatus: true\r\n            });\r\n        }\r\n    }\r\n\r\n    removeTeacher(element) {\r\n        let key;\r\n        database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((ele) => {\r\n                if(ele.val().teacherid === element.teacherid) {\r\n                    key = ele.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"teacher\").child(key).remove();\r\n        this.getData();\r\n    }\r\n\r\n    mapClass() {\r\n        return this.state.teachers.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element.teacherid}</td>\r\n                <td>{element.username}</td>\r\n                <td>{element.name}</td>\r\n                <td>{parseInt(element.gender) ? \"Nữ\" : \"Nam\"}</td>\r\n                <td>{element.dateofbirth}</td>\r\n                <td>{element.phone}</td>\r\n                <td>\r\n                    <button onClick={() => this.editTeacher(element)}>Sửa</button>\r\n                    <button onClick={() => this.removeTeacher(element)}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderTeacher() {\r\n        if(this.state.teachers) {\r\n            return (\r\n                <div className=\"teacher\">\r\n                    <h1>Danh sách giáo viên</h1>\r\n                    {this.checkAddStatus()}\r\n                    {this.checkEditStatus()}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>ID</th>\r\n                                <th>Tài khoản</th>\r\n                                <th>Họ và tên</th>\r\n                                <th>Giới tính</th>\r\n                                <th>Ngày sinh</th>\r\n                                <th>Số điện thoại</th>\r\n                                <th>\r\n                                    <button onClick={() => this.setState({ addStatus: !this.state.addStatus })}>Thêm</button>\r\n                                </th>\r\n                            </tr>\r\n                            {this.mapClass()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderTeacher()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teacher;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataStudent, database } from \"../api/Database\";\r\nimport { CREATE_SALT, HMAC_SHA256 } from \"../api/Authentication\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/Student.scss\";\r\n\r\nclass Student extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addStatus: false,\r\n            addStudent: {},\r\n            editStatus: false\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        let Students = await getDataStudent();\r\n\r\n        Students = Students.sort((a, b) => {\r\n            if(a.studentid > b.studentid) return 1;\r\n            if(a.studentid < b.studentid) return -1;\r\n            return 0;\r\n        });\r\n\r\n        this.setState({\r\n            students: Students\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleAddChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const SALT = CREATE_SALT(10);\r\n\r\n        if(name === \"studentid\" || name === \"username\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        if(name === \"password\") {\r\n            const HASH = HMAC_SHA256(value, SALT);\r\n            this.setState({\r\n                addStudent: {...this.state.addStudent, salt: SALT, hash: HASH}\r\n            })\r\n        } else {\r\n            this.setState({\r\n                addStudent: {...this.state.addStudent, [name]: value}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddSubmit(e) {\r\n        e.preventDefault();\r\n        let result;\r\n        database.ref(\"student\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().studentid === this.state.addStudent.studentid) {\r\n                    result = element.val();\r\n                }\r\n            })\r\n        });\r\n        if(result) {\r\n            alert(\"ID đã tồn tại.\")\r\n        } else {\r\n            database.ref(\"student\").push(this.state.addStudent);\r\n            this.setState({ addStatus: false });\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    checkAddStatus() {\r\n        if(this.state.addStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleAddSubmit(e)}>\r\n                    <input type=\"text\" name=\"studentid\" placeholder=\"ID\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Tài khoản\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"password\" placeholder=\"Mật khẩu\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Họ và tên\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <select name=\"gender\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required>\r\n                        <option value=\"\">Chọn giới tính</option>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                    <input type=\"date\" name=\"dateofbirth\" placeholder=\"Ngày sinh\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"phone\" placeholder=\"Số điện thoại\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Thêm</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleEditChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const SALT = CREATE_SALT(10);\r\n\r\n        if(name === \"studentid\" || name === \"username\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        if(name === \"password\") {\r\n            const HASH = HMAC_SHA256(value, SALT);\r\n            this.setState({\r\n                editStudent: {...this.state.editStudent, salt: SALT, hash: HASH}\r\n            })\r\n        } else {\r\n            this.setState({\r\n                editStudent: {...this.state.editStudent, [name]: value}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditSubmit(e) {\r\n        e.preventDefault();\r\n        let key;\r\n        database.ref(\"student\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().studentid === this.state.editStudent.studentid) {\r\n                    key = element.key\r\n                }\r\n            })\r\n        });\r\n        database.ref(\"student\").child(key).set(this.state.editStudent);\r\n        this.setState({ editStatus: false });\r\n        this.getData()\r\n    }\r\n\r\n    checkEditStatus() {\r\n        if(this.state.editStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.studentid} name=\"studentid\" placeholder=\"ID\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.username} name=\"username\" placeholder=\"Tài khoản\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" name=\"password\" placeholder=\"Mật khẩu\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.name} name=\"name\" placeholder=\"Họ và tên\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <select name=\"gender\" defaultValue={this.state.editStudent.gender} onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                    <input type=\"date\" defaultValue={this.state.editStudent.dateofbirth} name=\"dateofbirth\" placeholder=\"Ngày sinh\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.phone} name=\"phone\" placeholder=\"Số điện thoại\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Lưu</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    editStudent(element) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa.\")\r\n        } else {\r\n            this.setState({\r\n                editStudent: element,\r\n                editStatus: true\r\n            });\r\n        }\r\n    }\r\n\r\n    removeStudent(element) {\r\n        let key;\r\n        database.ref(\"student\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((ele) => {\r\n                if(ele.val().studentid === element.studentid) {\r\n                    key = ele.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"student\").child(key).remove();\r\n        this.getData();\r\n    }\r\n\r\n    mapClass() {\r\n        return this.state.students.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element.studentid}</td>\r\n                <td>{element.username}</td>\r\n                <td>{element.name}</td>\r\n                <td>{parseInt(element.gender) ? \"Nữ\" : \"Nam\"}</td>\r\n                <td>{element.dateofbirth}</td>\r\n                <td>{element.phone}</td>\r\n                <td>\r\n                    <button onClick={() => this.editStudent(element)}>Sửa</button>\r\n                    <button onClick={() => this.removeStudent(element)}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderStudent() {\r\n        if(this.state.students) {\r\n            return (\r\n                <div className=\"student\">\r\n                    <h1>Danh sách học sinh</h1>\r\n                    {this.checkAddStatus()}\r\n                    {this.checkEditStatus()}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>ID</th>\r\n                                <th>Tài khoản</th>\r\n                                <th>Họ và tên</th>\r\n                                <th>Giới tính</th>\r\n                                <th>Ngày sinh</th>\r\n                                <th>Số điện thoại</th>\r\n                                <th>\r\n                                    <button onClick={() => this.setState({ addStatus: !this.state.addStatus })}>Thêm</button>\r\n                                </th>\r\n                            </tr>\r\n                            {this.mapClass()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderStudent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Student;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataClassMember, getDataStudent, database } from \"../api/Database\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/ClassInfo.scss\";\r\n\r\nclass ClassInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addStatus: false,\r\n            addStudent: {},\r\n            editStatus: false,\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        const ClassMembers = await getDataClassMember();\r\n        const Students = await getDataStudent();\r\n\r\n        let students = [];\r\n\r\n        const ClassMember = ClassMembers.filter((element) => element.classid === this.props.classid);\r\n        ClassMember.forEach((element) => {\r\n            Students.forEach((ele) => {\r\n                if(element.classid === this.props.classid && element.studentid === ele.studentid) {\r\n                    const student = {\r\n                        studentid: element.studentid,\r\n                        count: element.count,\r\n                        score: element.score,\r\n                        studentname: ele.name\r\n                    }\r\n                    students.push(student);\r\n                }\r\n            })\r\n        })\r\n\r\n        students = students.sort((a, b) => {\r\n            if(a.studentid > b.studentid) return 1;\r\n            if(a.studentid < b.studentid) return -1;\r\n            return 0;\r\n        });\r\n\r\n        this.setState({ students: students });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleAddChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"studentid\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        this.setState({\r\n            addStudent: {...this.state.addStudent, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleAddSubmit(e) {\r\n        e.preventDefault();\r\n        const result = this.state.students.filter((element) => element.studentid === this.state.addStudent.studentid)[0];\r\n        if(result) {\r\n            alert(\"Mã lớp đã tồn tại.\")\r\n        } else {\r\n            const classMember = {\r\n                classid: this.props.classid,\r\n                studentid: this.state.addStudent.studentid,\r\n                count: this.state.addStudent.count,\r\n                score: this.state.addStudent.score\r\n            }\r\n            database.ref(\"class_member\").push(classMember);\r\n            this.setState({ addStatus: false });\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    checkAddStatus() {\r\n        if(this.state.addStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleAddSubmit(e)}>\r\n                    <input type=\"text\" name=\"studentid\" placeholder=\"Mã học sinh\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"count\" placeholder=\"Số buổi học\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"score\" placeholder=\"Điểm\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Thêm</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleEditChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"studentid\") {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        this.setState({\r\n            editStudent: {...this.state.editStudent, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleEditSubmit(e) {\r\n        e.preventDefault();\r\n        let key;\r\n        database.ref(\"class_member\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().classid === this.props.classid && element.val().studentid === this.state.editStudent.studentid) {\r\n                    key = element.key\r\n                }\r\n            })\r\n        })\r\n        const result = {\r\n            classid: this.props.classid,\r\n            studentid: this.state.editStudent.studentid,\r\n            count: this.state.editStudent.count,\r\n            score: this.state.editStudent.score\r\n        }\r\n        database.ref(\"class_member\").child(key).set(result);\r\n        this.setState({ editStatus: false });\r\n        this.getData();\r\n    }\r\n\r\n    checkEditStatus() {\r\n        if(this.state.editStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.studentid} name=\"studentid\" placeholder=\"Mã học sinh\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.count} name=\"count\" placeholder=\"Số buổi học\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" defaultValue={this.state.editStudent.score} name=\"score\" placeholder=\"Điểm\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Lưu</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    editStudent(element) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa.\")\r\n        } else {\r\n            this.setState({\r\n                editStudent: element,\r\n                editStatus: true\r\n            });\r\n        }\r\n    }\r\n\r\n    removeStudent(element) {\r\n        let key;\r\n        database.ref(\"class_member\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((ele) => {\r\n                if(ele.val().studentid === element.studentid) {\r\n                    key = ele.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"class_member\").child(key).remove();\r\n        this.getData();\r\n    }\r\n\r\n    mapStudent() {\r\n        return this.state.students.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element.studentid}</td>\r\n                <td>{element.studentname}</td>\r\n                <td>{element.count}</td>\r\n                <td>{element.score}</td>\r\n                <td>\r\n                    <button onClick={() => this.editStudent(element)}>Sửa</button>\r\n                    <button onClick={() => this.removeStudent(element)}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderClassInfo() {\r\n        if(this.state.students) {\r\n            return (\r\n                <div className=\"class_info\">\r\n                    <h1>Học sinh lớp {this.props.classid}</h1>\r\n                    {this.checkAddStatus()}\r\n                    {this.checkEditStatus()}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã học sinh</th>\r\n                                <th>Tên học sinh</th>\r\n                                <th>Số buổi học</th>\r\n                                <th>Điểm</th>\r\n                                <th>\r\n                                    <button onClick={() => this.setState({ addStatus: !this.state.addStatus })}>Thêm</button>\r\n                                </th>\r\n                            </tr>\r\n                            {this.mapStudent()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderClassInfo()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassInfo;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataCourse, database } from \"../api/Database\";\r\n\r\nimport \"../scss/Course.scss\";\r\n\r\nclass Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addStatus: false,\r\n            addCourse: {},\r\n            editStatus: false\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        let Courses = await getDataCourse();\r\n\r\n        Courses = Courses.sort((a, b) => {\r\n            if(a.courseid > b.courseid) return 1;\r\n            if(a.courseid < b.courseid) return -1;\r\n            return 0;\r\n        });\r\n\r\n        this.setState({\r\n            courses: Courses\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleAddChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"courseid\") {\r\n            value = value.toUpperCase();\r\n        }\r\n\r\n        this.setState({\r\n            addCourse: {...this.state.addCourse, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleAddSubmit(e) {\r\n        e.preventDefault();\r\n        let result;\r\n        database.ref(\"course\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().courseid === this.state.addCourse.courseid) {\r\n                    result = element.val();\r\n                }\r\n            })\r\n        });\r\n        if(result) {\r\n            alert(\"Mã khóa học đã tồn tại.\")\r\n        } else {\r\n            database.ref(\"course\").push(this.state.addCourse);\r\n            this.setState({ addStatus: false });\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    checkAddStatus() {\r\n        if(this.state.addStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleAddSubmit(e)}>\r\n                    <input type=\"text\" name=\"courseid\" placeholder=\"Mã khóa học\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Tên khóa học\" onChange={(e) => this.handleAddChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Thêm</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleEditChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(name === \"courseid\") {\r\n            value = value.toUpperCase();\r\n        }\r\n\r\n        this.setState({\r\n            editCourse: {...this.state.editCourse, [name]: value}\r\n        })\r\n    }\r\n\r\n    handleEditSubmit(e) {\r\n        e.preventDefault();\r\n        let key;\r\n        database.ref(\"course\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().courseid === this.state.editCourse.courseid) {\r\n                    key = element.key\r\n                }\r\n            })\r\n        });\r\n        database.ref(\"course\").child(key).set(this.state.editCourse);\r\n        this.setState({ editStatus: false });\r\n        this.getData()\r\n    }\r\n\r\n    checkEditStatus() {\r\n        if(this.state.editStatus) {\r\n            return (\r\n                <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={this.state.editCourse.courseid} name=\"courseid\" placeholder=\"Mã khóa học\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" disabled/>\r\n                    <input type=\"text\" defaultValue={this.state.editCourse.name} name=\"name\" placeholder=\"Tên khóa học\" onChange={(e) => this.handleEditChange(e)} autoComplete=\"off\" required/>\r\n                    <button type=\"submit\">Lưu</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    editCourse(element) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa.\")\r\n        } else {\r\n            this.setState({\r\n                editCourse: element,\r\n                editStatus: true\r\n            });\r\n        }\r\n    }\r\n\r\n    removeCourse(element) {\r\n        let key;\r\n        database.ref(\"course\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((ele) => {\r\n                if(ele.val().courseid === element.courseid) {\r\n                    key = ele.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"course\").child(key).remove();\r\n        this.getData();\r\n    }\r\n\r\n    mapCourse() {\r\n        return this.state.courses.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element.courseid}</td>\r\n                <td>{element.name}</td>\r\n                <td>\r\n                    <button onClick={() => this.editCourse(element)}>Sửa</button>\r\n                    <button onClick={() => this.removeCourse(element)}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderCourse() {\r\n        if(this.state.courses) {\r\n            return (\r\n                <div className=\"course\">\r\n                    <h1>Danh sách khóa học</h1>\r\n                    {this.checkAddStatus()}\r\n                    {this.checkEditStatus()}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã khóa học</th>\r\n                                <th>Tên khóa học</th>\r\n                                <th>\r\n                                    <button onClick={() => this.setState({ addStatus: !this.state.addStatus })}>Thêm</button>\r\n                                </th>\r\n                            </tr>\r\n                            {this.mapCourse()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderCourse()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\n\r\n//TODO COMPONENTS\r\nimport ClassList from './ClassList';\r\nimport Teacher from './Teacher';\r\nimport Student from './Student';\r\nimport ClassInfo from './ClassInfo';\r\nimport Course from './Course';\r\n\r\n//TODO SCSS\r\nimport \"../scss/Admin.scss\";\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: \"CLASS_LIST\"\r\n        };\r\n    }\r\n\r\n    option() {\r\n        switch (this.state.status) {\r\n            case \"CLASS_LIST\":\r\n                return <ClassList changeStatus={(status, classid) => this.changeStatus(status, classid)}/>\r\n            case \"TEACHER\":\r\n                return <Teacher />\r\n            case \"STUDENT\":\r\n                return <Student />\r\n            case \"COURSE\":\r\n                return <Course />\r\n            case \"CLASS_INFO\":\r\n                return <ClassInfo classid={this.state.classid}/>\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    changeStatus(status, classid) {\r\n        this.setState({\r\n            status: status,\r\n            classid: classid\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"admin\">\r\n                {this.option()}\r\n                <div className=\"btn\">\r\n                    <button onClick={() => this.changeStatus(\"CLASS_LIST\")}>Lớp</button>\r\n                    <button onClick={() => this.changeStatus(\"TEACHER\")}>Giáo viên</button>\r\n                    <button onClick={() => this.changeStatus(\"STUDENT\")}>Học sinh</button>\r\n                    <button onClick={() => this.changeStatus(\"COURSE\")}>Khóa học</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React, { Component } from 'react';\r\n\r\n//TODO SCSS\r\nimport \"../scss/Login.scss\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const account = {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password\r\n        }\r\n        this.props.checkAccount(account)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <h1>QUẢN LÝ</h1>\r\n                    <div>\r\n                        <label htmlFor=\"login_username\">TÀI KHOẢN</label>\r\n                        <input name=\"username\" id=\"login_username\" onChange={(e) => this.handleChange(e)} type=\"text\" autoComplete=\"Off\" required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"login_password\">MẬT KHẨU</label>\r\n                        <input name=\"password\" id=\"login_password\" onChange={(e) => this.handleChange(e)} type=\"password\" autoComplete=\"Off\" required/>\r\n                    </div>\r\n                    <p onClick={() => alert(\"Chưa phát triển.\")}>Quên mật khẩu?</p>\r\n                    <button type=\"submit\">ĐĂNG NHẬP</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataAdmin } from \"./api/Database\";\r\nimport { HMAC_SHA256 } from \"./api/Authentication\";\r\n\r\n//TODO COMPONENTS\r\nimport Admin from './components/Admin';\r\nimport Login from './components/Login';\r\n\r\n//TODO SCSS\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async checkAccount(account) {\r\n        const admin = await getDataAdmin();\r\n        if(admin.username === account.username && HMAC_SHA256(account.password, admin.salt) === admin.hash) {\r\n            alert(\"Đăng nhập thành công.\");\r\n            this.setState({\r\n                admin: <Admin />\r\n            });\r\n        } else alert(\"Sai mật khẩu hoặc tài khoản không tồn tại.\")\r\n    }\r\n\r\n    checkLogin() {\r\n        if(this.state.admin) {\r\n            return this.state.admin\r\n        }\r\n        return <Login checkAccount={(account) => this.checkAccount(account)}/>\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.checkLogin()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}